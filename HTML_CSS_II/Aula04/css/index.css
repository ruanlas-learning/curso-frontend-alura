/* site legal de suporte a navegadores:  http://caniuse.com/#feat=border-radius 
    serviços online para testar HTML e CSS: http://cssdeck.com/, http://dabblet.com/
    gabarito atividade 9 - Aula 04 => http://dabblet.com/gist/70a44631ea6fdab54962
*/
.foto-home {
    height: 200px;
    /*o trecho abaixo deixa a imagem redonda*/
    /*border-radius: 100px;*/
    border-radius: 50%;
    /*efeitinho legalll
    border-radius: 10% 50% / 50% 10%;
    */
}
.saudacao p {
    font-size: 1.5em;
    color: #99A;
    line-height: 1;
    padding: 2em;
}
header{
    position: relative;
}
main .trabalhos, main .blog{
    padding-left:  2%;
    padding-right: 2%;
    box-sizing: border-box;
}
.saudacao-inicio {
    color: #889;
    font-size: 3em;
}
.saudacao-ultima-linha {
    text-align: right;
    display: block;
}
.saudacao strong {
    color: #000;
    font-size: 2em;
}
.saudacao em {
    color: #851944;
    font-size: 4em;
    /*atividade 4 Aula04*/
    display: inline-block;
    transform: skew(-10deg)
    rotate(-5deg);
}
.banner{
    color: white;
    background-color: #3C1D3D;
    width: 14em;
    line-height: 1;
    padding: 1em 0;

    border: .25em solid black;
    box-sizing: border-box;
    font-size: 1.2em;
    font-family: "Open Sans Condensed", sans-serif;

    /*o trecho abaixo irá cuidar da transformação do elemento (rotação, posicionamento e translação)*/
    position: absolute;
    transform-origin: 0 0; /*Como queremos que o canto superior seja a base para a rotação, usamos a declaração*/
    transform: translate(6.5754em, -2.4749em) rotate(45deg);
    right: 0;
    top: 0;
}
.botao-index {
    font-size: 1.25em;
    background-color: #851944;
    color: #FFF;
    padding: .5em;
    border: .2em solid black;
    width: 40ch;
    margin: 2em auto;
    display: block;
    text-align: center;
}
.secao-inicio{
    padding: 2em;
}
.secao-inicio h2 {
    text-transform: uppercase;
    font-size: 3em;
    text-shadow: 2px 2px #000;
    margin-bottom: .5em;
}
.trabalhos {
    background-color: #3C1D3D;
    border-top: .5em solid #000;
    border-bottom: .5em solid #000;
}
.trabalhos h2 {
    color: #FFF;
}
.trabalhos ul {
    overflow: hidden;
    border: .5em solid black;
}
.trabalhos li {
    float: left;
    width: 33.333%;
}
.trabalhos img {
    width: 100%;
    display: block;
}
.blog {
    background-color: #999;
    color: #FFF;
    border-bottom: .5em solid #851944;
    /* a propiedade abaixo faz o blog se tornar a referência para o posicionamento do parágrafo */
    position: relative;
}
.blog small{
    position: relative;
    top: -2em;
}
.blog li a {
    color: #FCF;
    padding: .5em;
    display: block;
}
footer {
    background-color: #000;
    color: #FFF;
    padding: 2em;
}
footer h2{
    font-size: 3em;
}
footer a {
    color: #F99;
}
main {
    width: 80%;
    padding-bottom: 0;
    margin-left: auto; 
    margin-right: auto;
    float: none;
}
/*///*/

html ,body{
    /* criar o efeito paralaxe (objetos mais próximos com velocidade aparentemente maior) */
    height: 100%;
    /* o comando abaixo faz o navegador ignorar o que fica para fora da página. (transladamos o
    link para fora da página nos exercícios anteriores) */
    overflow-x: hidden;
}
body{
    /* no trecho abaixo estamos definindo a perspectiva não mais no cabeçalho, mas no body */
    perspective: 10px;
    perspective-origin: 50% 160px;
}
.palavras-home, .titulo-principal {
    /* para manter as transformações 3D adicionamos a declaração abaixo nos elementos acima 
    delas na hierarquia, que são a 'ul' com a classe 'palavras-home' e o 'header' com a 
    classe 'titulo-principal' */
    transform-style: preserve-3d;    /* mantém as transformações 3D funcionando nas palavras */
}
.palavras-flutuantes{
    /*referência da perspectiva para visualização dos elementos 
    3D (cone de luz). este elemento contém todas as palavras*/
    /* perspective: 4px; */
   /* perspective: 10px;*/
    position: absolute;
    top: 0;
    left: 0;
    /* Os elementos abaixo fazem com que as palavras ocupem o cabeçalho todo. pode ser 
    feito também substituindo eles por 'bottom' e 'right' também igual a 0 */
    width: 100%;
    height: 100%;
}
.palavra-home{
    font-family: "Shadows Into Light", cursive;
    color: #d5447e;
    font-style: bold;
    /*font-size: 1.5em;*/

    /*Após aplicar a transformação de 3D, observa-se que as palavras quando ampliadas ficaram
    meio borradas. Isso aconteceu pois os elementos que estão mais próximos da perspectiva
    o navegador tenta aumentá-las sem aumentar o tamanho da fonte. Para corrigir isso,
    aumentamos o tamanho da fonte para 4X ou mais (de acordo com a alteração abaixo), e
    depois em cada palavra adicionamos no 'transform' o valor 'scale(0.25)' após a translação no
    no eixo Z para fazer os elementos voltarem ao tamanho original */
    font-size: 550%;
}
.eficiencia {
    position: absolute;
    top: 20%;
    left: 75%;
    /*transform: rotate(30deg); /*Rotaciona o objeto no ângulo passado como referência*/
    /**/
    transform: translate(-50%, -50%) rotate(30deg) translateZ(-3px) scale(0.25);
}
.boas-praticas {
    position: absolute;
    top: 20%;
    left: 20%;
    /*transform: rotate(-30deg);*/

    transform: translate(-50%, -50%) rotate(-30deg) translateZ(1.3px) scale(0.25); /* Aplica a transformação 3D na palavra. (Deve seguir esta ordem) */
    /* translate(-50%, -50%) => faz com que o 'top' e o 'left' que estamos usando
    para posicionar as palavras definam a posição central delas, e não no canto superior esquerdo. Se as palavras mudarem de tamanho,
    não será necessário reposicioná-las
    rotate(-30deg) => rotação da palavra
    translateZ(1.3px) => translação (movimentação) da palavra no eixo Z
    scale(0.25) => modifica a escala da palavra (como aumentamos mais de 4X a palavra, é necessário voltá-la ao tamanho normal)
     */
}
.codigo-limpo {
    position: absolute;
    top: 67%;
    left: 13%;
    /*transform: rotate(60deg);*/

    transform: translate(-50%, -50%) rotate(60deg) translateZ(-.3px) scale(0.25);
}
.css3 {
    position: absolute;
    top: 30%;
    right: 30%;
    /*transform: rotate(45deg);*/

    transform: translate(-50%, -50%) rotate(45deg) translateZ(3px) scale(0.25);
}
.html5 {
    position: absolute;
    top: 75%;
    left: 67%;
    /*transform: rotate(0deg);*/

    transform: translate(-50%, -50%) rotate(0deg) translateZ(-1.2px) scale(0.25);
}
.javascript {
    position: absolute;
    top: 70%;
    left: 25%;
    /*transform: rotate(50deg);*/

    transform: translate(-50%, -50%) rotate(50deg) translateZ(1px) scale(0.25);
}
.acessibilidade {
    position: absolute;
    top: 43%;
    left: 85%;
    /*transform: rotate(-63deg);*/

    transform: translate(-50%, -50%) rotate(-63deg) translateZ(-1px) scale(0.25);
}
.responsivo {
    position: absolute;
    top: 35%;
    left: 31%;
    /*transform: rotate(-40deg);*/

    transform: translate(-50%, -50%) rotate(-40deg) translateZ(-.5px) scale(0.25);
}
.otimizacoes {
    position: absolute;
    top: 49%;
    left: 72%;
    /*transform: rotate(-39deg);*/

    transform: translate(-50%, -50%) rotate(-39deg) translateZ(4px) scale(0.25);
}
.agilidade {
    position: absolute;
    top: 47%;
    right: 75%;
    /*transform: rotate(-41deg);*/

    transform: translate(-50%, -50%) rotate(-41deg) translateZ(-1.9px) scale(0.25);
}
.design {
    position: absolute;
    top: 65%;
    left: 80%;
    /*transform: rotate(45deg);*/

    transform: translate(-50%, -50%) rotate(45deg) translateZ(3px) scale(0.25);
}
.inicio-post{
    background-color: white;
    color: black;
    padding-left: 1em;
    padding-right: 1em;
    padding-top: 1.5em;
    padding-bottom: 6em;
    position: absolute;
    top: 4em;
    right: 3em;
    /*left: 20em; */
    left: 30%;
    box-sizing: border-box;
}
.blog .mais-recente a{
    color: #F26;
}
.mais-recente{
    background-color: white;
    /*width: 18.9em; */
    width: 30%;
    /* A largura é definida na mesma porcentagem  que o deslocamento do 'left'
    da caixa '.inicio-post' */
    box-sizing: border-box;
}
/* sugestão atividade:

.blog .inicio-post {
    position: absolute;
    top: 4em;
    height: 8em;
    left: 30%;
    right: 4em;
    background-color: #F2FFFC;
    color: #000;
    padding: 1.5em;
}
Para que a caixa fique corretamente posicionada dentro da seção "Blog",
é necessário adicionar um position à section com a classe blog:
.blog {
    position: relative;
}
Para criar o efeito de a caixa estar ligada ao link, podemos colocar a 
cor de fundo no li correspondente ao primeiro link, no qual colocamos a classe mais-recente:

.blog .mais-recente {
    background-color: #F2FFFC;
}

.blog .mais-recente a {
    color: #F26;
}
Porém, colocando essa cor de fundo, veremos que o li ocupa a largura inteira da seção e,
por isso, a cor que colocamos acaba ultrapassando o lado direito da caixa. Para resolver
isso, podemos definir uma largura menor para esses li. Como a caixa está com left: 30%,
basta que o li chegue até esses 30%:

.blog li {
    width: 30%;
}

*/